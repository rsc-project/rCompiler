(()=>{var __webpack_modules__={987:e=>{!function(){"use strict";var t=[],s=3988292384;function r(e){for(var t,r,o=-1,n=0,i=e.length;n<i;n+=1){for(r=255&(o^e[n]),t=0;t<8;t+=1)1&~r?r>>>=1:r=r>>>1^s;o=o>>>8^r}return~o}function o(e,s){var r,n,i;if(void 0!==o.crc&&s&&e||(o.crc=-1,e)){for(r=o.crc,n=0,i=e.length;n<i;n+=1)r=r>>>8^t[255&(r^e[n])];return~(o.crc=r)}}for(var n,i,l=0;l<256;l+=1){for(n=l,i=0;i<8;i+=1)1&n?n=s^n>>>1:n>>>=1;t[l]=n>>>0}e.exports=function(e,t){return((t?r:o)(e="string"==typeof e?Array.prototype.map.call(e,(function(e){return e.charCodeAt(0)})):e)>>>0).toString(16)},e.exports.direct=r,e.exports.table=o}()},829:(module,__unused_webpack_exports,__webpack_require__)=>{const isLocal="undefined"==typeof window,crc32=__webpack_require__(987);var fs,AdmZip,path,XMLHttpRequest;isLocal&&(fs=__webpack_require__(968),AdmZip=__webpack_require__(211),path=__webpack_require__(944),XMLHttpRequest=__webpack_require__(301).XMLHttpRequest);class rsc{version(){return"1"}compilertype(){return"stl"}compile(jsonData,folderPath,fileName,iflog){let rscStorage=null;jsonData.extensionStorage&&jsonData.extensionStorage.rsc&&(rscStorage=jsonData.extensionStorage.rsc);const notRepeatCloneList=rscStorage?.project?.notRepeatCloneList?.split(",");let extrablocks=[];var structs=[],funcs=[],out="";let targetID=-1;var compileEvents=["rsc_import","procedures_definition","event_whenbroadcastreceived","event_whenflagclicked","event_whenkeypressed","rsc_setmain","rsc_setruntime"],inputlist=["sensing_answer","operator_equals","operator_subtract","operator_add","operator_divide","operator_multiply","operator_join","operator_random","operator_gt","operator_lt","operator_and","operator_or","operator_not","operator_contains","operator_letter_of","operator_length","operator_mod","operator_round","operator_mathop","sensing_timer","argument_reporter_string_number","argument_reporter_boolean","procedures_prototype","data_itemoflist","data_itemnumoflist","data_lengthoflist","data_listcontainsitem","control_create_clone_of_menu","control_run_as_sprite_menu","rsc_user","rsc_compilerversion","rsc_varget","rsc_typeas","rsc_typeis","rsc_typechoose","rsc_typeof","procedures_call"],operatorlist=["operator_equals","operator_subtract","operator_add","operator_divide","operator_multiply","operator_join","operator_gt","operator_lt","operator_and","operator_or","operator_not","operator_mod"],uselist=[],deplist=[],runtimelist=[],starteventlist=[],clones={},globalvarlist=[],noglobalvarids=[],noglobalvarlist=[],nogloballistids=[],flagcount=0,clonecount=0,proccount=0,presscount=0,broadcastfuncs={},procnamelist=[],procparselist=[],proctypelist=[],proctypelistbackup=[],procpublist=[],procpubrealnamelist=[],inuselist=[],mainlist=[],isclone=!1,hasreturn=!1,hasCommandBlock=!1,selfmut=!1,clonevarlist=[],rscfunc="",globalextrablocks=[],foreachcount=0,keywordcount=0,keywords={},keywordonlys={},procUsingArgList=[],ignore=!1,diagnosis="",usingvars={},usedvars=[],structnames=[],haverscfunc=!1,reqlist=[],Tools={setlibrary(e){e.forEach((e=>{uselist.includes(e)||uselist.push(e)}))},setmain(e){e.forEach((e=>{mainlist.includes(e)||mainlist.push(e)}))},setdepend(e){e.forEach((e=>{deplist.includes(e)||deplist.push(e)}))},setruntime(e){e.forEach((e=>{runtimelist.includes(e)||runtimelist.push(e)}))},setfunc(e){e.forEach((e=>{funcs.includes(e)||funcs.push(e)}))},setstruct(e){e.forEach((e=>{structnames.includes(e[0])||(structs.push(e),structnames.push(e[0]))}))},setreq(e){e.forEach((e=>{reqlist.includes(e[0])||reqlist.push(e)}))},setinuse(e){e.forEach((e=>{inuselist.includes(e)||inuselist.push(e)}))},setclonevar(e){e.forEach((e=>{clonevarlist.includes(e)||clonevarlist.push(e)}))},setextrablockcompile(e){var t={COMMAND:"m",CONDITIONAL:"m",LOOP:"m",HAT:"m",REPORTER:"r",BOOLEAN:"r",LABEL:"u",XML:"u",BUTTON:"u"},s={register:e=>{e.blocks&&e.id&&e.blocks.forEach((t=>{if("u"!=t.blockType){var s=e[t.opcode],r=e.id+"_"+t.opcode,o=t.blockType,n=t.blockStart;switch(extrablocks.push(r),t.isOperator&&operatorlist.push(r),o){case"m":compiles[r]=s;break;case"r":inputscompiles[r]=s,inputlist.push(r)}n&&compileEvents.push(r)}}))}},r=(e=new Function(e),e=>{throw new Error(e)});rscStorage?.config?.AllowThis?e.call({rsc:this,TypeInput,Cast,Tools,compile_this,BlockType:t,extensions:s,isCompiler:!0,ThrowError:r}):e.call({TypeInput,Cast,Tools,compile_this,BlockType:t,extensions:s,isCompiler:!0,ThrowError:r})}},TypeInput={Any:class{constructor(e){this.input=e,this.type="Any"}Num(){return this.input}Usize(){return this.input}i32(){return this.input}Str(){return this.input}Stri(){return this.input}Stu(){return this.input}},Num:class{constructor(e){this.input=e,this.type="Num"}Num(){return this.input}Usize(){return Number(this.input)?Math.round(this.input).toString()+"_usize":`(${this.input}) as usize`}i32(){return Number(this.input)?Math.round(this.input).toString()+"_i32":`(${this.input}) as i32`}Str(){return`&((${this.input}).to_string())`}Stri(){return`(${this.input}).to_string()`}Stu(){return`(${this.input}).to_string()`}},Usize:class{constructor(e){this.input=e,this.type="Usize"}Num(){return`(${this.input}) as f64`}Usize(){return Number(this.input)?Math.round(this.input).toString()+"_usize":this.input}i32(){return Number(this.input)?Math.round(this.input).toString()+"_i32":`(${this.input}) as i32`}Str(){return`&((${this.input}).to_string())`}Stri(){return`(${this.input}).to_string()`}Stu(){return`(${this.input}).to_string()`}},i32:class{constructor(e){this.input=e,this.type="i32"}Num(){return`(${this.input}) as f64`}Usize(){return Number(this.input)?Math.round(this.input).toString()+"_usize":`(${this.input}) as usize`}i32(){return Number(this.input)?Math.round(this.input).toString()+"_i32":this.input}Str(){return`&((${this.input}).to_string())`}Stri(){return`(${this.input}).to_string()`}Stu(){return`(${this.input}).to_string()`}},Str:class{constructor(e){this.input=e,this.type="Str"}Num(){return Tools.setruntime(["fn get_f64_string<T: AsRef<str>>(toget:T)->f64 {\nlet num:Result<f64, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0.0\n}\n}"]),`get_f64_string(${this.input})`}Usize(){return Tools.setruntime(["fn get_usize_string<T: AsRef<str>>(toget:T)->usize {\nlet num:Result<usize, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0\n}\n}"]),`get_usize_string(${this.input})`}i32(){return Tools.setruntime(["fn get_i32_string<T: AsRef<str>>(toget:T)->i32 {\nlet num:Result<i32, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0\n}\n}"]),`get_i32_string(${this.input})`}Str(){return this.input}Stri(){return`String::from(${this.input})`}Stu(){return this.input}},Stri:class{constructor(e){this.input=e,this.type="Stri"}Num(){return Tools.setruntime(["fn get_f64_string<T: AsRef<str>>(toget:T)->f64 {\nlet num:Result<f64, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0.0\n}\n}"]),`get_f64_string(${this.input.endsWith(".clone()")?this.input:this.input+".clone()"})`}Usize(){return Tools.setruntime(["fn get_usize_string<T: AsRef<str>>(toget:T)->usize {\nlet num:Result<usize, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0\n}\n}"]),`get_usize_string(${this.input.endsWith(".clone()")?this.input:this.input+".clone()"})`}i32(){return Tools.setruntime(["fn get_i32_string<T: AsRef<str>>(toget:T)->i32 {\nlet num:Result<i32, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0\n}\n}"]),`get_i32_string(${this.input.endsWith(".clone()")?this.input:this.input+".clone()"})`}Str(){return"&*("+this.input+")"}Stri(){return this.input}Stu(){return this.input}},Bool:class{constructor(e){this.input=e,this.type="Bool"}Bool(){return this.input}Num(){return`(${this.input}) as f64`}Usize(){return`(${this.input}) as usize`}i32(){return`(${this.input}) as i32`}Str(){return`&(${this.input}).to_string())`}Stri(){return`(${this.input}).to_string()`}Stu(){return`(${this.input}).to_string()`}},Var:rscStorage?.project?.UnuseTokio?class{constructor(e){this.input=e,this.type="Var"}Num(){var e=this.input;return globalvarlist.includes(e)?"self.vf_"+e:`self.vf_${targetID}_`+e}Usize(){var e=this.input;return globalvarlist.includes(e)?`self.vf_${e} as usize`:`self.vf_${targetID}_${e} as usize`}i32(){var e=this.input;return globalvarlist.includes(e)?`self.vf_${e} as i32`:`self.vf_${targetID}_${e} as i32`}Str(){var e=this.input;return globalvarlist.includes(e)?"&*self.vs_"+e:`&*self.vs_${targetID}_`+e}Stri(){var e=this.input;return globalvarlist.includes(e)?`self.vs_${e}.clone()`:`self.vs_${targetID}_${e}.clone()`}Stu(){var e=this.input;return globalvarlist.includes(e)?`self.vs_${e}.clone()`:`self.vs_${targetID}_${e}.clone()`}}:class{constructor(e){this.input=e,this.type="Var"}Num(){var e=this.input;return globalvarlist.includes(e)?(Tools.setfunc([`fn get_global_num_${e}(&self) -> f64 {\nlet globalvar = *self.vf_${e}.lock().unwrap();\nglobalvar\n}`]),`self.get_global_num_${e}()`):(Tools.setfunc([`fn get_${targetID}_num_${e}(&self) -> f64 {\nlet globalvar = *self.vf_${targetID}_${e}.lock().unwrap();\nglobalvar\n}`]),`self.get_${targetID}_num_${e}()`)}Usize(){var e=this.input;return globalvarlist.includes(e)?(Tools.setfunc([`fn get_global_num_${e}(&self) -> f64 {\nlet globalvar = *self.vf_${e}.lock().unwrap();\nglobalvar\n}`]),`self.get_global_num_${e}() as usize`):(Tools.setfunc([`fn get_${targetID}_num_${e}(&self) -> f64 {\nlet globalvar = *self.vf_${targetID}_${e}.lock().unwrap();\nglobalvar\n}`]),`self.get_${targetID}_num_${e}() as usize`)}i32(){var e=this.input;return globalvarlist.includes(e)?(Tools.setfunc([`fn get_global_num_${e}(&self) -> f64 {\nlet globalvar = *self.vf_${e}.lock().unwrap();\nglobalvar\n}`]),`self.get_global_num_${e}() as i32`):(Tools.setfunc([`fn get_${targetID}_num_${e}(&self) -> f64 {\nlet globalvar = *self.vf_${targetID}_${e}.lock().unwrap();\nglobalvar\n}`]),`self.get_${targetID}_num_${e}() as i32`)}Str(){var e=this.input;return globalvarlist.includes(e)?(Tools.setfunc([`fn get_global_str_${e}(&self) -> String {\nlet globalvar = self.vs_${e}.lock().unwrap().clone();\nglobalvar\n}`]),`&*self.get_global_str_${e}()`):(Tools.setfunc([`fn get_${targetID}_str_${e}(&self) -> String {\nlet globalvar = self.vs_${targetID}_${e}.lock().unwrap().clone();\nglobalvar\n}`]),`&*self.get_${targetID}_str_${e}()`)}Stri(){var e=this.input;return globalvarlist.includes(e)?(Tools.setfunc([`fn get_global_str_${e}(&self) -> String {\nlet globalvar = self.vs_${e}.lock().unwrap().clone();\nglobalvar\n}`]),`self.get_global_str_${e}()`):(Tools.setfunc([`fn get_${targetID}_str_${e}(&self) -> String {\nlet globalvar = self.vs_${targetID}_${e}.lock().unwrap().clone();\nglobalvar\n}`]),`self.get_${targetID}_str_${e}()`)}Stu(){var e=this.input;return globalvarlist.includes(e)?(Tools.setfunc([`fn get_global_str_${e}(&self) -> String {\nlet globalvar = self.vs_${e}.lock().unwrap().clone();\nglobalvar\n}`]),`self.get_global_str_${e}()`):(Tools.setfunc([`fn get_${targetID}_str_${e}(&self) -> String {\nlet globalvar = self.vs_${targetID}_${e}.lock().unwrap().clone();\nglobalvar\n}`]),`self.get_${targetID}_str_${e}()`)}}},Cast={toNum:e=>e&&""!=(e=(e="number"==typeof e?e.toString():e).startsWith('"')&&e.endsWith('"')?e.slice(1,-1):e)?Number.isInteger(Number(e))?String(Number(e))+".0":e:"0.0",toUsize:e=>e&&""!==(e=e.startsWith('"')&&e.endsWith('"')?e.slice(1,-1):e)?!e.includes(".")&&Number.isInteger(Number(e))?e:"("+e+") as usize":"0",toi32:e=>e&&""!==(e=e.startsWith('"')&&e.endsWith('"')?e.slice(1,-1):e)?!e.includes(".")&&Number.isInteger(Number(e))?e:"("+e+") as i32":"0",toStr:e=>e?Number(e)||0==e?'"'+e+'"':e.startsWith('"')&&e.endsWith('"')?e:"&"+e:'""',toStri:e=>e?Cast.isNum(e)||(e=(e=e.startsWith('"')&&e.endsWith('"')?"("+e+").to_string()":e).startsWith("(")&&e.endsWith(")")?"("+e+").to_string()":e).startsWith("_")?"("+e+").to_string()":e:"String::new()",isNum:e=>"f64"==e.type||"i32"==e.type||"usize"==e.type,NumTest:e=>(e.startsWith('"')&&e.endsWith('"')&&(e=e.slice(1,-1)),/^\s*(-?\d+(\s*[\+\-\*\/%]\s*-?\d+)*)\s*$/.test(e)),toBool:e=>e&&""!=e?e:"false",toChar:e=>"'"+e+"'",toKeyword:e=>"string"==typeof e?e.slice(1,-1):"",toPress(e,t){let s="";switch(e){case"space":s=" ";break;case"up arrow":s="Up";break;case"down arrow":s="Down";break;case"right arrow":s="Right";break;case"left arrow":s="Left";break;case"enter":s="Enter";break;case"any":s="Char(c)";break;case"backspace":s="Backspace";break;case"delete":s="Delete";break;case"shift":case"control":s="Null";break;case"caps lock":s="CapsLock";break;case"scroll lock":s="ScrollLock";break;case"escape":s="Esc";break;case"insert":s="Insert";break;case"home":s="Home";break;case"end":s="End";break;case"page up":s="PageUp";break;case"page down":s="PageD";break;default:s=`Char(${Cast.toChar(t.fields.KEY_OPTION[0])})`}return s},unParse:e=>JSON.stringify(e),keywordunParse:e=>(keywords.hasOwnProperty(e)||(keywordcount++,keywords[e]=keywordcount),keywords[e].toString()),keywordOnly:e=>(keywordonlys.hasOwnProperty(e)||(keywordonlys[e]=crc32(e)),keywordonlys[e]),Safe:e=>e||"",SafeBool:e=>e?e.Bool():"false",replaceParentheses(e){if(e)return e.startsWith("(")&&e.endsWith(")")?e.slice(1,-1):e}};const inputscompiles={sensing_answer:rscStorage?.project?.UnuseTokio?e=>(Tools.setstruct([["sensing_answer","String","String::new()"]]),new TypeInput.Stri("&self.sensing_answer.clone()")):e=>(Tools.setstruct([["sensing_answer","Mutex<String>","Mutex::new(String::new())"]]),new TypeInput.Stri("&self.sensing_answer.lock().unwrap().clone()")),operator_equals:e=>new TypeInput.Bool("("+e.OPERAND1.Stri()+"=="+e.OPERAND2.Stri()+")"),operator_subtract:e=>new TypeInput.Num("("+e.NUM1.Num()+"-"+e.NUM2.Num()+")"),operator_add:e=>new TypeInput.Num("("+e.NUM1.Num()+"+"+e.NUM2.Num()+")"),operator_divide:e=>new TypeInput.Num("("+e.NUM1.Num()+"/"+e.NUM2.Num()+")"),operator_multiply:e=>new TypeInput.Num("("+e.NUM1.Num()+"*"+e.NUM2.Num()+")"),operator_join:e=>new TypeInput.Stri("("+e.STRING1.Stu()+".to_owned()+&"+e.STRING2.Stu()+".to_owned())"),operator_random:e=>(Tools.setdepend(['rand = "0.8"']),Tools.setlibrary(["use rand::Rng;"]),Tools.setruntime([["fn operator_random(num1: f64, num2: f64) -> f64 {","let mut rng = rand::thread_rng();","let are_both_integers = num1.fract() == 0.0 && num2.fract() == 0.0;","if are_both_integers {","let start = num1 as i64;","let end = num2 as i64;","if start > end {","return rng.gen_range(end..=start) as f64;","} else {","return rng.gen_range(start..=end) as f64;","}","} else {","if rng.gen_bool(0.5) {","return num1;","} else {","return num2;","}","}","}"].join("\n")]),new TypeInput.Num("operator_random("+e.FROM.Num()+","+e.TO.Num()+")")),operator_gt:e=>new TypeInput.Bool("("+e.OPERAND1.Num()+">"+e.OPERAND2.Num()+")"),operator_lt:e=>new TypeInput.Bool("("+e.OPERAND1.Num()+"<"+e.OPERAND2.Num()+")"),operator_and:e=>new TypeInput.Bool("("+Cast.SafeBool(e.OPERAND1)+"&&"+Cast.SafeBool(e.OPERAND2)+")"),operator_or:e=>new TypeInput.Bool("("+Cast.SafeBool(e.OPERAND1)+"||"+Cast.SafeBool(e.OPERAND2)+")"),operator_not:e=>new TypeInput.Bool("!("+Cast.SafeBool(e.OPERAND)+")"),sensing_timer:e=>new TypeInput.Num("timer.get_timer()"),argument_reporter_string_number:e=>1==e.scope.block.shadow?(proctypelist.push("&str"),"pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0])):(procUsingArgList.push("pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0])),new TypeInput.Str("pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0]))),argument_reporter_boolean:e=>1==e.scope.block.shadow?(proctypelist.push("bool"),"pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0])):(procUsingArgList.push("pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0])),new TypeInput.Bool("pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0]))),procedures_prototype:e=>(procnamelist.push(e.scope.block.mutation.proccode),delete e.scope,new class{constructor(e){this.input=e,this.type="protoType"}protoType(){return this.input}}(e)),data_itemoflist(e){var t=getlist(Cast.keywordunParse(e.scope.block.fields.LIST[0]),e.scope.block.fields.LIST[1]),s=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return Tools.setfunc([[`fn get_item_${s}(&self,item: usize) -> String{`,`if let Some(value) = ${t}.get(item) {`,"value.to_string()","} else {","String::new()","}","}"].join("\n")]),new TypeInput.Stri(`self.get_item_${s}(if let Some(result) = ${'"last"'==e.INDEX?t+".len()":"("+e.INDEX.Usize()}).checked_sub(1) {result} else {0})`)},data_itemnumoflist(e){var t=getlist(Cast.keywordunParse(e.scope.block.fields.LIST[0]),e.scope.block.fields.LIST[1]),s=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return Tools.setfunc([[`fn get_position_${s}(&self,value_to_find: &str) -> f64{`,`if let Some(position) = ${t}.iter().position(|x| x == &value_to_find) {`,"position as f64 + 1.0","} else {","0.0","}","}"].join("\n")]),new TypeInput.Num(`self.get_position_${s}(${e.ITEM.Str()})`)},data_lengthoflist(e){var t=getlist(Cast.keywordunParse(e.scope.block.fields.LIST[0]),e.scope.block.fields.LIST[1]);return e=Cast.keywordunParse(e.scope.block.fields.LIST[0]),Tools.setfunc([[`fn get_leng_${e}(&self) -> f64{`,t+".len() as f64","}"].join("\n")]),new TypeInput.Num(`self.get_leng_${e}()`)},data_listcontainsitem(e){var t=getlist(Cast.keywordunParse(e.scope.block.fields.LIST[0]),e.scope.block.fields.LIST[1]),s=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return Tools.setfunc([[`fn get_contains_${s}(&self,item: String) -> bool{`,t+".contains(&item)","}"].join("\n")]),new TypeInput.Bool(`self.get_contains_${s}(${e.ITEM.Stri()})`)},control_create_clone_of_menu:e=>e.scope.block.fields.CLONE_OPTION[0],control_run_as_sprite_menu:e=>e.scope.block.fields.RUN_AS_OPTION[0],operator_contains:e=>new TypeInput.Bool(`${e.STRING1.Stu()}.contains(&${e.STRING2.Stu()})`),operator_letter_of:e=>(Tools.setruntime(["fn get_char_at<T: AsRef<str>>(s: T, index: f64) -> String {\ns.as_ref().chars().nth((index - 1.0) as usize).map(|c| c.to_string()).unwrap_or_default()\n}"]),new TypeInput.Stri(`get_char_at(${e.STRING.Stu()},${e.LETTER.Num()})`)),operator_length:e=>new TypeInput.Num(e.STRING.Stu()+".chars().count() as f64"),operator_mod:e=>new TypeInput.Num("("+e.NUM1.Num()+"%"+e.NUM2.Num()+")"),operator_round:e=>(Tools.setruntime(["fn numround(s: f64) -> f64 {\ns.round()\n}"]),new TypeInput.Num(`numround(${e.NUM.Num()})`)),operator_mathop(e){if("abs"==e.scope.block.fields.OPERATOR[0])return Tools.setruntime(["fn numabs(s: f64) -> f64 {\ns.abs()\n}"]),new TypeInput.Num(`numabs(${e.NUM.Num()})`)},rsc_user(e){var t=e.scope.block.fields.from[0],s=e.scope.block.fields.hsm[0],r=Object.keys(e).filter((e=>e.startsWith("ADD"))).map((t=>e[t].Stri()));return""!=t?(t="m_"+Cast.keywordunParse(t),Tools.setstruct([[t,"md_"+Cast.keywordunParse(e.scope.block.fields.from[0]),`md_${Cast.keywordunParse(e.scope.block.fields.from[0])}::new()`]]),new TypeInput.Stri(`self.${t}.procpub${Cast.keywordOnly(s)}(${r.join(",")})`)):new TypeInput.Stri(`self.procpub${Cast.keywordOnly(s)}(${r.join(",")})`)},rsc_compilerversion:e=>new TypeInput.Num((new rsc).version()),rsc_varget:e=>new class{constructor(e){this.input=e,this.type="ScopeVar"}Num(){return Tools.setruntime(["fn get_f64_string<T: AsRef<str>>(toget:T)->f64 {\nlet num:Result<f64, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0.0\n}\n}"]),`get_f64_string(_scopevar_${this.input})`}Usize(){return Tools.setruntime(["fn get_usize_string<T: AsRef<str>>(toget:T)->usize {\nlet num:Result<usize, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0\n}\n}"]),`get_usize_string(_scopevar_${this.input})`}i32(){return Tools.setruntime(["fn get_i32_string<T: AsRef<str>>(toget:T)->i32 {\nlet num:Result<i32, _> = toget.as_ref().parse();\nmatch num {\nOk(parsed_num) => parsed_num,\nErr(_) => 0\n}\n}"]),`get_i32_string(_scopevar_${this.input})`}Str(){return"*_scopevar_"+this.input}Stri(){return"_scopevar_"+this.input}Stu(){return"_scopevar_"+this.input}}(Cast.keywordunParse(e.scope.block.fields.HEADER[0])),rsc_typeas(e){var t=e.scope.block.fields.type[0];return new TypeInput[t](e.thing[t]())},rsc_typeis(e){var t=e.scope.block.fields.type[0];return new TypeInput[t](e.thing.input)},rsc_typechoose(e){var t=e.scope.block.fields.type[0];return new TypeInput.Bool(e.thing.type==t)},rsc_typeof:e=>new TypeInput.Str(e.thing.type),procedures_call(e){var t=[],s={...e},r=(delete s.scope,delete s.compiler,proctypelistbackup[procnamelist.indexOf(e.scope.block.mutation.proccode)]);let o=-1,n=0;for(const e in s)o++,s.hasOwnProperty(e)&&("F"==r[o]?(n++,s.compiler+=`let func${n} = || {\n${s[e]}};\n`,t.push("func"+n)):t.push("&str"==r[o]?s[e].Str():Cast.SafeBool(s[e])));let i=procparselist[procnamelist.indexOf(e.scope.block.mutation.proccode)];return procpublist.includes(i)&&(i=procpubrealnamelist[procpublist.indexOf(i)]),new TypeInput.Stri(`self.${i}(${t.join(",")})`+(e.scope.block.mutation.hasOwnProperty("return")&&"1"==e.scope.block.mutation.return?"":";\n"))}},compiles={event_whenflagclicked(e){flagcount++,starteventlist.push("flag"+flagcount);var t="";return e.scope.block.next&&(t=compile_this(e.scope.target.blocks[e.scope.block.next],e.scope.target)),e.compiler+=rscStorage?.project?.UnuseTokio?`fn flag${flagcount}(${selfmut?"&mut self":"&self"}){`+(0==inuselist.length?"":"\n")+inuselist.join("\n")+"\n":`async fn flag${flagcount}(${selfmut?"&mut self":"&self"}){`+(0==inuselist.length?"":"\n")+inuselist.join("\n")+"\n",""!=t&&(e.compiler+=t),e.compiler+="}\n",Tools.setfunc([e.compiler]),e.compiler},procedures_definition(e){proccount++,hasreturn=!1;let t=rscfunc="",s=(procUsingArgList=[],e.scope.block.next&&(t=compile_this(e.scope.target.blocks[e.scope.block.next],e.scope.target)),[]),r=(procparselist.push("proc"+proccount),proctypelistbackup.push(proctypelist),-1);const o=e.custom_block.protoType();var n;return Object.keys(o).forEach((function(e){r++,procUsingArgList.includes(o[e])?s.push(o[e]+": "+proctypelist[r]):s.push("_"+o[e]+": "+proctypelist[r])})),rscfunc&&(procpublist.push("proc"+proccount),procpubrealnamelist.push("procpub"+rscfunc)),e.compiler+=(rscfunc?"pub fn procpub"+rscfunc:"fn proc"+proccount)+(hasCommandBlock?"<F: Fn()>":"")+`(${selfmut?"&mut self":"&self"}${"0"!=s.length?",":""}${s.join(",")})${hasreturn?"->Arc<String>":""}{\n`,hasCommandBlock=!1,e.compiler+=t,hasreturn&&(Tools.setlibrary(["use std::sync::Arc;"]),"return"!=(n=e.compiler.split("\n"))[n.length-2].substring(0,6)?e.compiler+="Arc::new(String::new())\n":(n[n.length-2]=n[n.length-2].substring(7,n[n.length-2].length-1),e.compiler=n.join("\n"))),e.compiler+="}\n",Tools.setfunc([e.compiler]),e.compiler},procedures_return:e=>(e.compiler+="return Arc::new("+e.VALUE.Stri()+");\n",hasreturn=!0,e.compiler),procedures_call(e){var t=[],s={...e},r=(delete s.scope,delete s.compiler,proctypelistbackup[procnamelist.indexOf(e.scope.block.mutation.proccode)]);let o=-1,n=0;for(const e in s)o++,s.hasOwnProperty(e)&&("F"==r[o]?(n++,s.compiler+=`let func${n} = || {\n${s[e]}};\n`,t.push("func"+n)):t.push("&str"==r[o]?s[e].Str():Cast.SafeBool(s[e])));let i=procparselist[procnamelist.indexOf(e.scope.block.mutation.proccode)];return procpublist.includes(i)&&(i=procpubrealnamelist[procpublist.indexOf(i)]),e.compiler+=`self.${i}(${t.join(",")})`+(e.scope.block.mutation.hasOwnProperty("return")&&"1"==e.scope.block.mutation.return?"":";\n"),e.compiler},control_start_as_clone(e){clonecount++;var t="";return clonevarlist=[],e.scope.block.next&&(t=compile_this(e.scope.target.blocks[e.scope.block.next],e.scope.target)),notRepeatCloneList.includes(e.scope.target.name)||(Tools.setdepend(['async-recursion = "1.0.5"']),Tools.setlibrary(["use async_recursion::async_recursion;"]),e.compiler+="#[async_recursion]\n"),e.compiler+=`async fn _${targetID}_clone${clonecount}(){`+(0==inuselist.length?"":"\n")+inuselist.join("\n")+"\n",e.compiler+=0==clonevarlist.length?"":clonevarlist.join("\n")+"\n",""!=t&&(e.compiler+=t),e.compiler+="}\n",out+=e.compiler,e.compiler},control_create_clone_of(e){var t="";let s=[];if("_myself_"==e.CLONE_OPTION)s=clones[targetID];else{const t=e.CLONE_OPTION;let r=-1;jsonData.targets.forEach(((e,s)=>{e.name===t&&(r=s)})),s=clones[r]}return s&&s.forEach((function(e){t+=`tokio::spawn(${e}());\n`})),e.compiler+=t,e.compiler},control_delete_this_clone:e=>(e.compiler+="return;\n",e.compiler),control_forever:e=>(e.compiler+="loop {\n",e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="}\n",e.compiler),control_break:e=>(e.compiler+="break;",e.compiler),control_repeat:e=>(e.compiler+=`let repeatto = ${e.TIMES.Usize()};\n`,e.compiler+="for _ in 0..repeatto{\n",e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="}\n",e.compiler),control_for_each(e){foreachcount++;var t=getvar(s=Cast.keywordunParse(e.scope.block.fields.VARIABLE[0]),e.scope.block.fields.VARIABLE[1]).num(),s=getvar(s,e.scope.block.fields.VARIABLE[1]).str();return e.compiler+=`let foreachvarnum${foreachcount} = ${t};\n`,e.compiler+=`let foreachvarstr${foreachcount} = (${s}).clone();\n`,e.compiler+=s+' = String::from("0");\n',e.compiler+=t+" = 0.0;\n",e.compiler+=`let foreachto${foreachcount} = ${e.VALUE.Usize()};\n`,e.compiler+=`let mut foreachnum${foreachcount} = 1;\n`,e.compiler+=`while foreachnum${foreachcount} <= foreachto${foreachcount} {\n`,e.compiler+=t+` = foreachnum${foreachcount} as f64;\n`,e.compiler+=s+` = foreachnum${foreachcount}.to_string();\n`,e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+=`foreachnum${foreachcount} += 1;\n`,e.compiler+="}\n",e.compiler+=t+` = foreachvarnum${foreachcount};\n`,e.compiler+=s+` = foreachvarstr${foreachcount};\n`,e.compiler},control_if:e=>(e.compiler+=`if ${Cast.SafeBool(e.CONDITION)}{\n`,e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="};\n",e.compiler),control_if_else:e=>(e.compiler+=`if ${Cast.SafeBool(e.CONDITION)}{\n`,e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="}\n",e.compiler+="else {\n",e.compiler+=Cast.Safe(e.SUBSTACK2),e.compiler+="};\n",e.compiler),control_while:e=>(e.compiler+=`while ${Cast.SafeBool(e.CONDITION)}{\n`,e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="};\n",e.compiler),control_wait_until:e=>(e.compiler+=`while !(${Cast.SafeBool(e.CONDITION)}){};\n`,e.compiler),control_repeat_until:e=>(e.compiler+=`while !(${Cast.SafeBool(e.CONDITION)}){\n`,e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="};\n",e.compiler),control_all_at_once:e=>(e.compiler+="if true{\n",e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler+="}\n",e.compiler),sensing_askandwait:rscStorage?.project?.UnuseTokio?e=>(Tools.setlibrary(["use std::io;","use std::io::Write;"]),Tools.setstruct([["sensing_answer","String","String::new()"]]),e.compiler+=`print!("{}",${e.QUESTION.Stu()});\n`,e.compiler+='print!("\\n");\n',e.compiler+="io::stdout().flush().unwrap();\n",e.compiler+="let mut sensing_answer = String::new();\n",e.compiler+="io::stdin().read_line(&mut sensing_answer).unwrap();\n",e.compiler+="self.sensing_answer = sensing_answer.trim().to_owned();\n",rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler):e=>(Tools.setlibrary(["use std::io;","use std::io::Write;","use std::sync::Mutex;"]),Tools.setstruct([["sensing_answer","Mutex<String>","Mutex::new(String::new())"]]),e.compiler+=`print!("{}",${e.QUESTION.Stu()});\n`,e.compiler+='print!("\\n");\n',e.compiler+="io::stdout().flush().unwrap();\n",e.compiler+="let mut sensing_answer = String::new();\n",e.compiler+="io::stdin().read_line(&mut sensing_answer).unwrap();\n",e.compiler+="*self.sensing_answer.lock().unwrap() = sensing_answer.trim().to_owned();\n",e.compiler),looks_say:e=>(e.compiler+=`println!("{}",${e.MESSAGE.Stu()});\n`,e.compiler),looks_think:e=>(e.compiler+=`println!("{}",${e.MESSAGE.Stu()});\n`,e.compiler),control_wait:e=>(Tools.setlibrary(["use std::thread;","use std::time::Duration;"]),e.compiler+=`thread::sleep(Duration::from_secs_f64(${e.DURATION.Num()}));\n`,e.compiler),sensing_resettimer:e=>(Tools.setlibrary(["use std::time::Duration;","use tokio::time::Instant;"]),Tools.setruntime([["struct Timer {","start_time: Instant,","}","impl Timer {","fn new() -> Timer {","let start_time = Instant::now();","Timer { start_time }","}","fn get_timer(mut self) -> f64 {","let current_time = Instant::now();","let elapsed_time = current_time.duration_since(self.start_time);","let seconds_with_fraction = elapsed_time.as_secs_f64();","seconds_with_fraction","}\n}"].join("\n")]),Tools.setinuse(["let mut timer = Timer::new();"]),e.compiler+="timer = Timer::new();\n",e.compiler),data_setvariableto(e){var t=Cast.keywordunParse(e.scope.block.fields.VARIABLE[0]);return e.compiler+=`${getvar(t,e.scope.block.fields.VARIABLE[1]).num()} = ${e.VALUE.Num()};\n`,e.compiler+=`${getvar(t,e.scope.block.fields.VARIABLE[1]).str()} = ${e.VALUE.Stri()};\n`,rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},data_changevariableby(e){var t=Cast.keywordunParse(e.scope.block.fields.VARIABLE[0]);return e.compiler+=`${getvar(t,e.scope.block.fields.VARIABLE[1]).num()} += ${e.VALUE.Num()};\n`,e.compiler+=`${getvar(t,e.scope.block.fields.VARIABLE[1]).str()} = (${getvar(t,e.scope.block.fields.VARIABLE[1]).num()}).to_string();\n`,rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},data_addtolist(e){var t=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return e.compiler+=`let addin = ${e.ITEM.Stri()};\n`,e.compiler+=getlist(t,e.scope.block.fields.LIST[1])+".push(addin);\n",rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},data_deletealloflist(e){var t=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return e.compiler+=getlist(t,e.scope.block.fields.LIST[1])+".clear();\n",rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},data_deleteoflist(e){var t=Cast.keywordunParse(e.scope.block.fields.LIST[0]),s='"last"'==e.INDEX?`(${getlist(t,e.scope.block.fields.LIST[1])}.len() as i32 - 1) as usize`:"("+e.INDEX.i32()+" - 1) as usize";return e.compiler+=`let removein = ${s};\n`,e.compiler+="if removein != usize::MAX {\n",e.compiler+=`if removein < ${getlist(t,e.scope.block.fields.LIST[1])}.len() {\n${getlist(t,e.scope.block.fields.LIST[1])}.remove(removein);\n}\n`,e.compiler+="}\n",rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},data_insertatlist(e){var t=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return e.compiler+=`let insertin = ${e.ITEM.Stri()};\n`,e.compiler+=`let insertin2 = ${'"last"'==e.INDEX.input?`(${getlist(t,e.scope.block.fields.LIST[1])}.len() as i32 - 1) as usize`:"("+e.INDEX.i32()+" - 1) as usize"};\n`,e.compiler+="if insertin2 != usize::MAX {\n",e.compiler+=getlist(t,e.scope.block.fields.LIST[1])+".insert(insertin2,insertin);\n",e.compiler+="}\n",rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},data_replaceitemoflist(e){var t=Cast.keywordunParse(e.scope.block.fields.LIST[0]);return e.compiler+=`let getin = ${'"last"'==e.INDEX?`(${getlist(t,e.scope.block.fields.LIST[1])}.len() as i32 - 1) as usize`:"("+e.INDEX.i32()+" - 1) as usize"};\n`,e.compiler+=`let itemin = ${e.ITEM.Str()};\n`,e.compiler+="if getin != usize::MAX {\n",e.compiler+=`if let Some(item) = ${getlist(t,e.scope.block.fields.LIST[1])}.get_mut(getin) {\n`,e.compiler+="*item = itemin.to_owned();\n",e.compiler+="};\n",e.compiler+="};\n",rscStorage?.project?.UnuseTokio&&(selfmut=!0),e.compiler},control_stop(e){switch(e.scope.block.fields.STOP_OPTION[0]){case"all":case"other scripts in sprite":return Tools.setlibrary(["use std::process;"]),e.compiler+="process::exit(0);\n",e.compiler;case"this script":return e.compiler+="return;\n",e.compiler}return e.compiler},control_run_as_sprite:e=>(e.compiler+=Cast.Safe(e.SUBSTACK),e.compiler),event_broadcast(e){if(broadcastfuncs.hasOwnProperty(e.BROADCAST_INPUT)){var t=broadcastfuncs[e.BROADCAST_INPUT];let s="";t.map((e=>{s+="tokio::spawn(async move {\n"+e+"});\n"})),e.compiler+=s}return e.compiler},event_broadcastandwait(e){if(broadcastfuncs.hasOwnProperty(e.BROADCAST_INPUT)){var t=broadcastfuncs[e.BROADCAST_INPUT];let s=[];t.map((e=>{s.push("tokio::spawn(async move {\n"+e+"})\n")})),e.compiler+=`tokio::try_join!(${s.join(",")}).unwrap();`}return e.compiler},event_whenbroadcastreceived(e){var t,s=e.scope.block;return e.scope.block.next&&(t=compile_this(e.scope.target.blocks[e.scope.block.next],e.scope.target),broadcastfuncs.hasOwnProperty(Cast.unParse(s.fields.BROADCAST_OPTION[0]))?broadcastfuncs[Cast.unParse(s.fields.BROADCAST_OPTION[0])].push(t):broadcastfuncs[Cast.unParse(s.fields.BROADCAST_OPTION[0])]=[t]),e.compiler},event_whenkeypressed(e){presscount++;var t="",s=Cast.toPress(e.scope.block.fields.KEY_OPTION[0],e.scope.block);return Tools.setlibrary(["use crossterm::event::{self, Event, KeyCode};"]),Tools.setdepend(['crossterm = "0.27.0"']),e.scope.block.next&&(t=compile_this(e.scope.target.blocks[e.scope.block.next],e.scope.target)),e.compiler+=`async fn press${presscount}(){\n`,e.compiler+=["loop {","if event::poll(std::time::Duration::from_millis(1)).unwrap() {","if let Event::Key(event) = event::read().unwrap() {","match event.code {",`KeyCode::${s} => {`,t+"},","_ => (),","},","},","},","},","}\n"].join("\n"),Tools.setmain([`tokio::spawn(press${presscount}());`]),out+=e.compiler,e.compiler},rsc_outcompiler:e=>(e.compiler+=e.scope.block.fields.HEADER[0],e.compiler),rsc_outcompilerr:e=>(e.compiler+=e.scope.block.fields.HEADER[0],e.compiler),rsc_outcompileb:e=>(e.compiler+=e.scope.block.fields.HEADER[0],e.compiler),rsc_cloneandwait(e){var t="";let s=[];if("_myself_"==e.CLONE_OPTION)s=clones[targetID];else{const t=e.CLONE_OPTION;let r=-1;jsonData.targets.forEach(((e,s)=>{e.name===t&&(r=s)})),s=clones[r]}return s&&s.forEach((function(e){t+=e+"().await;\n"})),e.compiler+=t,e.compiler},rsc_import:isLocal?e=>{var t=e.scope.block.fields.HEADER[0];function s(e){try{var t,s=new AdmZip(e).getEntry("project.json");if(s)return t=s.getData().toString("utf-8"),JSON.parse(t);throw new Error("不是有效的Scratch项目文件")}catch(e){throw e}}function r(e,t){var s=new XMLHttpRequest;if(s.open("GET",e,!1),s.responseType=t,s.send(null),200===s.status)return s.responseText;throw console.log(s),new Error("获取远程组件失败")}function o(e,t,o){var n=function(e){if(e.startsWith("./"))return e.slice(2,e.length).replace("/","::");if(e.startsWith(".")||e.endsWith("/")||e.endsWith(".sb3")||e.endsWith(".rs")||e.endsWith(".json")||e.endsWith(".js"))throw new Error("引入地址错误");let t=e.substring(0,e.indexOf("/")),s=(t="super::".repeat(t.split(".").length-2),e.substring(e.indexOf("/")+1));return s=s.replace("/","::"),e=t+s,Tools.setreq([e.slice(7,e.length)]),e}(e),i=e+t,{deplist:e,globalextrablocks:o,reqlist:t}=(Tools.setlibrary([`mod ${n};`]),Tools.setlibrary([`use ${n}::Default as md_${Cast.keywordunParse(e)};`]),n="local"==o?".sb3"==t?s(fs.readFileSync(i)):fs.readFileSync(i,"utf-8"):".sb3"==t?s(r(i,"arraybuffer")):r(i,"text"),(new rsc).compile(n,folderPath,path.parse(i).name,iflog));let l=[];t.forEach((e=>{e.startsWith("super::")&&l.push(e.slice(7,e.length))})),Tools.setreq(l),Tools.setlibrary(t),Tools.setextrablockcompile(o),Tools.setdepend(e)}function n(e,t){var s={COMMAND:"m",CONDITIONAL:"m",LOOP:"m",HAT:"m",REPORTER:"r",BOOLEAN:"r",LABEL:"u",XML:"u",BUTTON:"u"},o={register:e=>{e.blocks&&e.id&&e.blocks.forEach((t=>{if("u"!=t.blockType){var s=e[t.opcode],r=e.id+"_"+t.opcode,o=t.blockType,n=t.blockStart;switch(extrablocks.push(r),t.isOperator&&operatorlist.push(r),o){case"m":compiles[r]=s;break;case"r":inputscompiles[r]=s,inputlist.push(r)}n&&compileEvents.push(r)}}))}};t=new Function("local"==t?fs.readFileSync(e+".js").toString():r(e,"text")),e=e=>{throw new Error(e)},rscStorage?.config?.AllowThis?t.call({rsc:this,fs,AdmZip,path,TypeInput,Cast,Tools,compile_this,BlockType:s,extensions:o,isCompiler:!0,ThrowError:e}):t.call({TypeInput,path,Cast,Tools,compile_this,BlockType:s,extensions:o,isCompiler:!0,ThrowError:e})}return t.startsWith(".")?fs.existsSync(t+".json")?o(t,".json","local"):fs.existsSync(t+".sb3")?o(t,".sb3","local"):fs.existsSync(t+".js")&&n(t,"local"):(t.startsWith("https://")||t.startsWith("http://"))&&(t.endsWith(".json")||t.endsWith(".sb3")?o(t,"web"):t.endsWith(".js")&&n(t,"web")),e.compiler}:()=>{var e=args.scope.block.fields.HEADER[0];function t(e,t){var s=new XMLHttpRequest;if(s.open("GET",e,!1),s.responseType=t,s.send(null),200===s.status)return s.responseText;throw console.log(s),new Error("获取远程组件失败")}function s(e,s){var r=function(e){if(e.startsWith("./"))return e.slice(2,e.length).replace("/","::");if(e.startsWith(".")||e.endsWith("/")||e.endsWith(".sb3")||e.endsWith(".rs")||e.endsWith(".json")||e.endsWith(".js"))throw new Error("引入地址错误");let t=e.substring(0,e.indexOf("/")),s=(t="super::".repeat(t.split(".").length-2),e.substring(e.indexOf("/")+1));return s=s.replace("/","::"),e=t+s,Tools.setreq([e.slice(7,e.length)]),e}(e),o=e+s,{deplist:e,globalextrablocks:s,reqlist:r}=(Tools.setlibrary([`mod ${r};`]),Tools.setlibrary([`use ${r}::Default as md_${Cast.keywordunParse(e)};`]),r=".sb3"==s?getSb3(t(o,"arraybuffer")):t(o,"text"),(new rsc).compile(r,folderPath,path.parse(o).name,iflog));let n=[];r.forEach((e=>{e.startsWith("super::")&&n.push(e.slice(7,e.length))})),Tools.setreq(n),Tools.setlibrary(r),Tools.setextrablockcompile(s),Tools.setdepend(e)}return(e.startsWith("https://")||e.startsWith("http://"))&&(e.endsWith(".json")?s(e,".json"):e.endsWith(".sb3")?s(e,".sb3"):e.endsWith(".js")&&function(e){var s={COMMAND:"m",CONDITIONAL:"m",LOOP:"m",HAT:"m",REPORTER:"r",BOOLEAN:"r",LABEL:"u",XML:"u",BUTTON:"u"},r={register:e=>{e.blocks&&e.id&&e.blocks.forEach((t=>{if("u"!=t.blockType){var s=e[t.opcode],r=e.id+"_"+t.opcode,o=t.blockType,n=t.blockStart;switch(extrablocks.push(r),t.isOperator&&operatorlist.push(r),o){case"m":compiles[r]=s;break;case"r":inputscompiles[r]=s,inputlist.push(r)}n&&compileEvents.push(r)}}))}},o=(e=new Function(t(e,"text")),e=>{throw new Error(e)});rscStorage?.config?.AllowThis?e.call({rsc:this,fs,AdmZip,path,TypeInput,Cast,Tools,compile_this,BlockType:s,extensions:r,isCompiler:!0,ThrowError:o}):e.call({TypeInput,path,Cast,Tools,compile_this,BlockType:s,extensions:r,isCompiler:!0,ThrowError:o})}(e)),args.compiler},rsc_func:e=>(rscfunc=Cast.keywordOnly(e.scope.block.fields.HEADER[0]),haverscfunc=!0,e.compiler),rsc_use(e){var t=e.scope.block.fields.from[0],s=e.scope.block.fields.hsm[0],r=Object.keys(e).filter((e=>e.startsWith("ADD"))).map((t=>e[t].Stri()));return""!=t?(t="m_"+Cast.keywordunParse(t),Tools.setstruct([[t,"md_"+Cast.keywordunParse(e.scope.block.fields.from[0]),`md_${Cast.keywordunParse(e.scope.block.fields.from[0])}::new()`]]),e.compiler+=`self.${t}.procpub${Cast.keywordOnly(s)}(${r.join(",")});\n`):e.compiler+=`self.procpub${Cast.keywordOnly(s)}(${r.join(",")});\n`,e.compiler},rsc_setmain:e=>(mainlist.push(e.SUBSTACK),e.compiler),rsc_setruntime:e=>(runtimelist.push(e.SUBSTACK),e.compiler),rsc_setinuse:e=>(inuselist.push(e.SUBSTACK),e.compiler),rsc_setdepend:e=>(Tools.setdepend([e.scope.block.fields.HEADER[0]]),e.compiler),rsc_setlibrary:e=>(Tools.setlibrary([e.scope.block.fields.HEADER[0]]),e.compiler),rsc_varcreate(e){var t=Cast.keywordunParse(e.scope.block.fields.HEADER[0]);return e.compiler+=`let mut _scopevar_${t} = String::new();\n`,e.compiler},rsc_varset(e){var t=Cast.keywordunParse(e.scope.block.fields.HEADER[0]);return e.compiler+=`_scopevar_${t} = ${e.thing.Stri()};\n`,e.compiler},rsc_ignore:e=>(ignore=!1,e.compiler),argument_command:e=>1==e.scope.block.shadow?(proctypelist.push("F"),hasCommandBlock=!0,"pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0])):"pm_"+Cast.keywordunParse(e.scope.block.fields.VALUE[0])+"();\n"};function find_diagnosis(){var e=Object.keys(usingvars);const t=Object.values(usingvars);e.forEach(((e,s)=>{usedvars.includes(e)||(diagnosis+=`🤔 不存在${t[s]}的使用, 请手动删除此${"l"==e[0]?"列表":"变量"}\n`)}))}function getlist(e,t){return rscStorage?.project?.UnuseTokio?nogloballistids.includes(t)?isclone?(Tools.setclonevar([`let mut cl_${e} = self.l_${targetID}_${e};`]),usedvars.push(`l_${targetID}_`+e),"cl_"+e):(usedvars.push(`l_${targetID}_`+e),`self.l_${targetID}_`+e):(usedvars.push("l_"+e),"self.l_"+e):nogloballistids.includes(t)?isclone?(Tools.setclonevar([`let mut cl_${e} = self.l_${targetID}_${e}.lock().unwrap();`]),usedvars.push(`l_${targetID}_`+e),"cl_"+e):(usedvars.push(`l_${targetID}_`+e),`self.l_${targetID}_${e}.lock().unwrap()`):(usedvars.push("l_"+e),`self.l_${e}.lock().unwrap()`)}function getvar(e,t){return rscStorage?.project?.UnuseTokio?noglobalvarids.includes(t)?isclone?(Tools.setclonevar([`let mut cv_str_${e} = self.vs_${targetID}_${e};`,`let mut cv_num_${e} = *self.vf_${targetID}_${e};`]),{str:()=>(usedvars.push(`vs_${targetID}_`+e),"cv_str_"+e),num:()=>(usedvars.push(`vf_${targetID}_`+e),"cv_num_"+e)}):{str:()=>(usedvars.push(`vs_${targetID}_`+e),`self.vs_${targetID}_`+e),num:()=>(usedvars.push(`vf_${targetID}_`+e),`self.vf_${targetID}_`+e)}:{str:()=>(usedvars.push("vs_"+e),"self.vs_"+e),num:()=>(usedvars.push("vf_"+e),"self.vf_"+e)}:noglobalvarids.includes(t)?isclone?(Tools.setclonevar([`let mut cv_str_${e} = self.vs_${targetID}_${e}.lock().unwrap().clone();`,`let mut cv_num_${e} = *self.vf_${targetID}_${e}.lock().unwrap();`]),{str:()=>(usedvars.push(`vs_${targetID}_`+e),"cv_str_"+e),num:()=>(usedvars.push(`vf_${targetID}_`+e),"cv_num_"+e)}):{str:()=>(usedvars.push(`vs_${targetID}_`+e),`*self.vs_${targetID}_${e}.lock().unwrap()`),num:()=>(usedvars.push(`vf_${targetID}_`+e),`*self.vf_${targetID}_${e}.lock().unwrap()`)}:{str:()=>(usedvars.push("vs_"+e),`*self.vs_${e}.lock().unwrap()`),num:()=>(usedvars.push("vf_"+e),`*self.vf_${e}.lock().unwrap()`)}}function compile_main(){var e=(haverscfunc?"pub ":"")+`struct Default{\n${structs.map((e=>e[0]+":"+e[1])).join(",\n")}\n}\n`;if(e+=`impl Default{\n${haverscfunc?"pub ":""}fn new() -> Default{\nDefault{\n${structs.map((e=>e[0]+":"+e[2])).join(",\n")}\n}\n}\n${funcs.join("\n")}}\n`,0==flagcount)e+=`fn main(){\n${0==mainlist.length?"":mainlist.join("\n")}}`;else if(1==flagcount)rscStorage?.project?.UnuseTokio?e+=`fn main(){\nlet ${selfmut?"mut ":""}init = Default::new();\n${0==mainlist.length?"":mainlist.join("\n")}init.flag1();\n}`:(Tools.setdepend(['tokio = { version = "1", features = ["full"] }']),e+=`#[tokio::main]\nasync fn main(){\nlet ${selfmut?"mut ":""}init = Default::new();\n${0==mainlist.length?"":mainlist.join("\n")}init.flag1().await;\n}`);else if(rscStorage?.project?.UnuseTokio){e+="fn main(){\nlet init = Default::new();\n"+(0==mainlist.length?"":mainlist.join("\n"));let t=-1;starteventlist.forEach((function(s){t++,e+=`init.${s}();\n`})),e+="}"}else{Tools.setdepend(['tokio = { version = "1", features = ["full"] }']),e+="#[tokio::main]\nasync fn main(){\nlet init = Default::new();\n"+(0==mainlist.length?"":mainlist.join("\n"));let s=[],r=-1;starteventlist.forEach((function(e){r++,s.push("init."+e+"()")}));var t=s.join(",");e+=`tokio::join!(${t});\n}`}return e}function find_vars(){jsonData.targets.forEach(((e,t)=>{var s=t,r=jsonData.targets[s].variables,o=jsonData.targets[s].lists;if("{}"!=JSON.stringify(r)||"{}"!=JSON.stringify(o))if(rscStorage?.project?.UnuseTokio){for(const e in r){var n=r[e][0],i=Cast.keywordunParse(n),l=r[e][1];(0==s?("number"==typeof l?structs.push(["vf_"+i,"f64",Cast.toNum(l)]):structs.push(["vf_"+i,"f64","0.0"]),structs.push(["vs_"+i,"String",`(${Cast.unParse(l)}).to_string()`]),usingvars["vf_"+i]=n,usingvars["vs_"+i]=n,globalvarlist):("number"==typeof l?structs.push(["vf_"+s+"_"+i,"f64",Cast.toNum(l)]):structs.push(["vf_"+s+"_"+i,"f64","0.0"]),structs.push(["vs_"+s+"_"+i,"String",`(${Cast.unParse(l)}).to_string()`]),usingvars["vf_"+s+"_"+i]=n,usingvars["vs_"+s+"_"+i]=n,noglobalvarids.push(e),noglobalvarlist)).push(i)}var a=[];for(const e in o){var c=o[e][0],u=Cast.keywordunParse(c),p=o[e][1],_=[];for(const e in p)_.push(Cast.toStr(Cast.unParse(p[e])));0==s?(structs.push(["l_"+u,"Vec<String>",0!=_.length?`[${_.join(",")}].iter().map(|s| s.to_string()).collect()`:"vec![]"]),usingvars["l_"+u]=c):(structs.push(["l_"+s+"_"+u,"Vec<String>",0!=_.length?`[${_.join(",")}].iter().map(|s| s.to_string()).collect()`:"vec![]"]),usingvars["l_"+s+"_"+u]=c,nogloballistids.push(e),noglobalvarlist.push(u))}0!=a.length&&Tools.setmain([a.join("\n")])}else{Tools.setlibrary(["use std::sync::Mutex;"]);for(const e in r){var m=r[e][0],f=Cast.keywordunParse(m),g=r[e][1];(0==s?("number"==typeof g?structs.push(["vf_"+f,"Mutex<f64>",`Mutex::new(${Cast.toNum(g)})`]):structs.push(["vf_"+f,"Mutex<f64>","Mutex::new(0.0)"]),structs.push(["vs_"+f,"Mutex<String>",`Mutex::new((${Cast.unParse(g)}).to_string())`]),usingvars["vf_"+f]=m,usingvars["vs_"+f]=m,globalvarlist):("number"==typeof g?structs.push(["vf_"+s+"_"+f,"Mutex<f64>",`Mutex::new(${Cast.toNum(g)})`]):structs.push(["vf_"+s+"_"+f,"Mutex<f64>","Mutex::new(0.0)"]),structs.push(["vs_"+s+"_"+f,"Mutex<String>",`Mutex::new((${Cast.unParse(g)}).to_string())`]),usingvars["vf_"+s+"_"+f]=m,usingvars["vs_"+s+"_"+f]=m,noglobalvarids.push(e),noglobalvarlist)).push(f)}a=[];for(const e in o){var d=o[e][0],h=Cast.keywordunParse(d),b=o[e][1],v=[];for(const e in b)v.push(Cast.toStr(Cast.unParse(b[e])));0==s?(structs.push(["l_"+h,"Mutex<Vec<String>>",`Mutex::new(${0!=v.length?`[${v.join(",")}].iter().map(|s| s.to_string()).collect()`:"vec![]"})`]),usingvars["l_"+h]=d):(structs.push(["l_"+s+"_"+h,"Mutex<Vec<String>>",`Mutex::new(${0!=v.length?`[${v.join(",")}].iter().map(|s| s.to_string()).collect()`:"vec![]"})`]),usingvars["l_"+s+"_"+h]=d,nogloballistids.push(e),noglobalvarlist.push(h))}0!=a.length&&Tools.setmain([a.join("\n")])}}))}function compile_input(e,t){var s,r=e.inputs,o={};for(s in r)if(r.hasOwnProperty(s))if("object"==typeof r[s][1])r[s][1]?(n=r[s][1][1],3==r[s][1].length?11==r[s][1][0]?o[s]=new TypeInput.Str(Cast.unParse(n)):(l=Cast.keywordunParse(n),o[s]=new TypeInput.Var(l)):Cast.NumTest(Cast.unParse(n))?o[s]=new TypeInput.Num(Cast.toNum(n)):o[s]=new TypeInput.Str(Cast.unParse(n))):o[s]="CONDITION"==s?"false":"";else if("string"==typeof r[s][1]){var n,i,l=t.blocks[r[s][1]];if("procedures_call"==l.opcode)if(l.mutation.return){const e=compile_input(l,t);o[s]=e}else{const e=compile_this(l,t);o[s]=e}else if(inputlist.includes(l.opcode))i=operatorlist.includes(l.opcode)&&!operatorlist.includes(e.opcode)?("object"==typeof(n=compile_input(l,t))&&n.hasOwnProperty("input")&&(n.input=Cast.replaceParentheses(n.input)),n):compile_input(l,t),o[s]=i;else{const e=compile_this(l,t);o[s]=e}}return"procedures_call"==e.opcode?e.mutation.return?(o.scope={block:e,target:t},inputscompiles[e.opcode](o)):o:inputscompiles.hasOwnProperty(e.opcode)?(o.scope={block:e,target:t},inputscompiles[e.opcode](o)):o}function compile(e,t){var s="";if(!e)return"";if("rsc_ignore"==e.opcode&&(ignore=!0),"{}"!=JSON.stringify(e.inputs)){switch(e.opcode){case"procedures_definition":proctypelist=[];break;case"rsc_funcargin":rscfuncargs=[]}var r=compile_input(e,t)}else r={};return compiles.hasOwnProperty(e.opcode)?(r.scope={block:e,target:t},r.compiler=s,s=compiles[e.opcode](r)):(console.log(r),ignore||console.warn("[33m未知的块[m: "+e.opcode)),s}function compile_this(e,t){for(var s="";s+=compile(e,t),null!=e.next&&!compileEvents.includes(e.opcode);)e=t.blocks[e.next];return s}function start_compile_from_events(e){if(e.blocks&&"object"==typeof e.blocks){for(const s of compileEvents)for(const r in e.blocks){var t=e.blocks[r];t.opcode===s&&compile_this(t,e)}compile_clones(e)}}function find_clones(){var e=targetID;targetID=-1,jsonData.targets.forEach((e=>{if(targetID++,e.blocks&&e.blocks&&"object"==typeof e.blocks)for(var t in e.blocks)"control_start_as_clone"==e.blocks[t].opcode&&(clonecount++,clones.hasOwnProperty(targetID)||(clones[targetID]=[]),clones[targetID].push(`_${targetID}_clone`+clonecount))})),targetID=e,clonecount=0}function compile_clones(e){if(e.blocks&&"object"==typeof e.blocks)for(var t in e.blocks)"control_start_as_clone"==(t=e.blocks[t]).opcode&&(isclone=!0,compile_this(t,e),isclone=!1)}function createDirectory(e){fs.existsSync(e)||fs.mkdirSync(e,{recursive:!0})}return rscStorage?.config?.RunAtCompile&&(compiles.rsc_compile=function(args){return eval(args.scope.block.fields.HEADER[0]),args.compiler}),find_vars(),find_clones(),jsonData.targets.forEach((e=>{targetID++,e.blocks&&start_compile_from_events(e)})),out+=compile_main(),0!=runtimelist.length&&(out=runtimelist.join("\n")+"\n"+out),0!=uselist.length&&(out=uselist.join("\n")+"\n"+out),find_diagnosis(),isLocal&&(createDirectory(folderPath),out=`// By r-Scratch-Compiler ${(new Date).toISOString()} 🍥 v${(new rsc).version()}-${(new rsc).compilertype()}\n`+out,fs.writeFile(path.join(folderPath,fileName+".rs"),out,(e=>{e&&console.error("无法写入文件：",e)}))),iflog&&console.log(out),diagnosis&&console.log(diagnosis),{deplist,globalextrablocks,out,reqlist}}}isLocal||(window.rsc=rsc),module.exports=rsc},211:e=>{"use strict";e.exports=adm-zip},968:e=>{"use strict";e.exports=fs},944:e=>{"use strict";e.exports=path},301:e=>{"use strict";e.exports=xmlhttprequest}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];return void 0!==t||(t=__webpack_module_cache__[e]={exports:{}},__webpack_modules__[e](t,t.exports,__webpack_require__)),t.exports}var __webpack_exports__=__webpack_require__(829)})();